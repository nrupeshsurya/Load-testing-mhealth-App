file='./beginTime.txt'
beginTime=$(cat "$file")
file='./closeTime.txt'
closeTime=$(cat "$file")

aws cloudwatch get-metric-statistics --namespace AWS/DynamoDB --metric-name SuccessfulRequestLatency --dimensions Name=TableName,Value=processed_data Name=Operation,Value=GetItem --statistics Average --start-time $beginTime --end-time $closeTime --period 60  --region us-west-2 | jq -r '.Datapoints[] | [.Timestamp, .Average, .Unit] | @csv' > GetLatency.csv
aws cloudwatch get-metric-statistics --namespace AWS/DynamoDB --metric-name SuccessfulRequestLatency --dimensions Name=TableName,Value=processed_data Name=Operation,Value=BatchGetItem --statistics Average --start-time $beginTime --end-time $closeTime --period 60  --region us-west-2 | jq -r '.Datapoints[] | [.Timestamp, .Average, .Unit] | @csv' > BatchGetLatency.csv
aws cloudwatch get-metric-statistics --namespace AWS/Lambda --metric-name Duration --dimensions Name=FunctionName,Value=processed-data-endpoint --statistics Average --start-time $beginTime --end-time $closeTime --period 60  --region us-west-2 | jq -r '.Datapoints[] | [.Timestamp, .Average, .Unit] | @csv' > LambdaDuration.csv
aws cloudwatch get-metric-statistics --namespace AWS/ApiGateway --metric-name Latency --dimensions Name=Stage,Value=\$default Name=ApiId,Value=eqis35fgv7 --statistics Average --start-time $beginTime --end-time $closeTime --period 60  --region us-west-2 | jq -r '.Datapoints[] | [.Timestamp, .Average, .Unit] | @csv' > ApiLatency.csv
aws cloudwatch get-metric-statistics --namespace AWS/ApiGateway --metric-name IntegrationLatency --dimensions Name=Stage,Value=\$default Name=ApiId,Value=eqis35fgv7 --statistics Average --start-time $beginTime --end-time $closeTime --period 60  --region us-west-2 | jq -r '.Datapoints[] | [.Timestamp, .Average, .Unit] | @csv' > IntegrationLatency.csv